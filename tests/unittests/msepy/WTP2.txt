<Runner>-<Matrix3dInputRunner>-<task name: None>
[2023-05-28 21:29:07]
<dir> : None
<solver_dir> :
E:\OneDrive\Codes\phyem\tests\unittests\msepy\m2n2.py

<solver_source_code> :
def test_function(K, N, c):
    """

    Parameters
    ----------
    K :
        elements
    N :
        Polynomial degree
    c :
        Mesh deformation factor.

    Returns
    -------
    f0i_error :
    f0o_error :
    f2_error :
    f1i_error :
    f1o_error :
    df0i_error :
    df0o_error :
    df1i_error :
    df1o_error :

    """
    if isinstance(K, int):
        K = (K, K)
    else:
        pass
    if isinstance(N, int):
        N = (N, N)
    else:
        pass

    ph.config.set_embedding_space_dim(space_dim)

    manifold = ph.manifold(space_dim)
    mesh = ph.mesh(manifold)

    L0i = ph.space.new('Lambda', 0, orientation='inner')
    L0o = ph.space.new('Lambda', 0, orientation='outer')
    L1i = ph.space.new('Lambda', 1, orientation='inner')
    L1o = ph.space.new('Lambda', 1, orientation='outer')
    L2 = ph.space.new('Lambda', 2)

    f0i = L0i.make_form('f_i^0', '0-f-i')
    f0o = L0o.make_form('f_o^0', '0-f-o')
    f1i = L1i.make_form('f_i^1', '1-f-i')
    f1o = L1o.make_form('f_o^1', '1-f-o')
    f2 = L2.make_form('f^2', '2-f')

    ph.space.finite(N)

    msepy, obj = ph.fem.apply('msepy', locals())

    manifold = msepy.base['manifolds'][r"\mathcal{M}"]
    mesh = msepy.base['meshes'][r'\mathfrak{M}']
    f0i = obj['f0i']
    f0o = obj['f0o']
    f1i = obj['f1i']
    f1o = obj['f1o']
    f2 = obj['f2']

    msepy.config(manifold)(
        'crazy_multi', c=c, bounds=[[0, 2] for _ in range(space_dim)]
    )

    msepy.config(mesh)(K)

    scalar = ph.vc.scalar(fx)
    vector = ph.vc.vector(ux, uy)

    f2.cf = scalar
    f2[2].reduce()
    f0i.cf = scalar
    f0i[2].reduce()
    f0o.cf = scalar
    f0o[2].reduce()

    f0i_error = f0i[2].error()  # by default, we will compute the L^2 error.
    f0o_error = f0o[2].error()  # by default, we will compute the L^2 error.
    f2_error = f2[2].error()  # by default, we will compute the L^2 error.

    f1i.cf = vector
    f1i[2].reduce()
    f1o.cf = vector
    f1o[2].reduce()

    f1i_error = f1i[2].error()  # by default, we will compute the L^2 error.
    f1o_error = f1o[2].error()  # by default, we will compute the L^2 error.

    df0i = f0i.coboundary[2]()
    df0i_error = df0i[2].error()  # by default, we will compute the L^2 error.
    df0o = f0o.coboundary[2]()
    df0o_error = df0o[2].error()  # by default, we will compute the L^2 error.

    df1i = f1i.coboundary[2]()
    df1i_error = df1i[2].error()  # by default, we will compute the L^2 error.
    df1o = f1o.coboundary[2]()
    df1o_error = df1o[2].error()  # by default, we will compute the L^2 error.

    return f0i_error, f0o_error, f2_error, \
        f1i_error, f1o_error, \
        df0i_error, df0o_error, \
        df1i_error, df1o_error


<input names> : ('K', 'N', 'c')
<input criterion> : standard
<output names> : ('f0i_error', 'f0o_error', 'f2_error', 'f1i_error', 'f1o_error', 'df0i_error', 'df0o_error', 'df1i_error', 'df1o_error')
<kwargs> : {}
<INFO> : None

<RESULTS> : 
index          K                        N                        c                        f0i_error                f0o_error                f2_error                 f1i_error                f1o_error                df0i_error               df0o_error               df1i_error               df1o_error               | ITC(W)         TTC(W)         ERT(W)       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------
0              2                        1                        0                        1.0000154015396063e+00   1.0000154015396063e+00   5.8566873447955148e-01   6.7278543203541341e-01   1.4142026713787297e+00   7.0247498141891427e+00   7.0247498141891427e+00   5.2042318199416915e+00   7.0246199818865396e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
1              4                        1                        0                        2.4915648255246922e-01   2.4915648255246922e-01   4.7984355127877554e-01   5.6562154047685309e-01   6.4673510391114308e-01   2.9156337317122869e+00   2.9156337317122869e+00   4.7571098026180110e+00   3.9765147250426693e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
2              6                        1                        0                        1.1672452832236269e-01   1.1672452832236269e-01   3.2977753697098400e-01   3.5887892105442515e-01   4.3068951552878731e-01   1.9535279839452753e+00   1.9535279839452753e+00   3.3081353194654795e+00   2.7791555193488957e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
3              8                        1                        0                        6.6879883105468607e-02   6.6879883105468607e-02   2.5000023989291031e-01   2.6291084134566217e-01   3.2223534201635545e-01   1.4668753744129692e+00   1.4668753744129692e+00   2.5186225262162125e+00   2.1196473888439962e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
4              2                        3                        0                        4.0565755858987272e-02   4.0565755858987272e-02   3.0163862489098980e-02   3.2581817218978813e-02   1.7486402091788356e-01   7.6735070908137892e-01   7.6735070908137892e-01   3.1512558729978835e-01   1.1305674054158017e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
5              4                        3                        0                        1.9716069218513183e-03   1.9716069218513183e-03   1.1966844190887069e-02   1.2285719644709463e-02   1.6902565124299031e-02   7.4995772147032805e-02   7.4995772147032805e-02   1.2953251690441925e-01   1.1197558746892596e-01   | [00:00:00]     [00:00:00]     [00:00:00]   
6              6                        3                        0                        3.9530252440898693e-04   3.9530252440898693e-04   3.6006809538201979e-03   3.6436406089241677e-03   5.0675126215946973e-03   2.2525079781480037e-02   2.2525079781480037e-02   3.8980201549516688e-02   3.3698378453884674e-02   | [00:00:00]     [00:00:00]     [00:00:00]   
7              8                        3                        0                        1.2573053779832918e-04   1.2573053779832918e-04   1.5272292270590382e-03   1.5375040526377896e-03   2.1466606483843123e-03   9.5480349559102923e-03   9.5480349559102923e-03   1.6534177053660816e-02   1.4294004095990971e-02   | [00:00:00]     [00:00:00]     [00:00:00]   
8              2                        1                        1.0000000000000001e-01   9.9968133796144032e-01   9.9968133796144032e-01   1.1221355989444750e+00   1.9476164311367723e+00   1.4144442287610128e+00   7.0261575134840450e+00   7.0261575134840450e+00   5.7556627143659860e+00   7.0287994719323619e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
9              4                        1                        1.0000000000000001e-01   2.9268554661213753e-01   2.9268554661213753e-01   7.3015217981584624e-01   1.0560932259314162e+00   7.3211682854563809e-01   3.3057768684150428e+00   3.3057768684150428e+00   4.8576452755394586e+00   4.2524023732864205e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
10             6                        1                        1.0000000000000001e-01   1.3291298530358406e-01   1.3291298530358406e-01   5.1509568557475993e-01   6.7909075310649525e-01   4.6529506252223418e-01   2.1398171566509809e+00   2.1398171566509809e+00   3.5756905964325902e+00   2.9143032365398316e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
11             8                        1                        1.0000000000000001e-01   7.7106261284646149e-02   7.7106261284646149e-02   3.9252828194006578e-01   5.0015667211718029e-01   3.4826735382317792e-01   1.6083018803408455e+00   1.6083018803408455e+00   2.7442678408193348e+00   2.2365396591344742e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
12             2                        3                        1.0000000000000001e-01   4.6634702739897005e-02   4.6634702739897005e-02   1.9418550806678803e-01   2.4184291385416046e-01   1.8927563961844349e-01   8.9721094172670990e-01   8.9721094172670990e-01   1.8178819158492876e+00   1.3241231405113105e+00   | [00:00:00]     [00:00:00]     [00:00:00]   
13             4                        3                        1.0000000000000001e-01   5.9937955447305095e-03   5.9937955447305095e-03   2.5301915245392666e-02   4.1148497321639936e-02   4.8126284959343596e-02   2.0223808768831716e-01   2.0223808768831716e-01   2.2469271556770265e-01   2.4993946151349622e-01   | [00:00:00]     [00:00:00]     [00:00:00]   
14             6                        3                        1.0000000000000001e-01   1.0667325212725947e-03   1.0667325212725947e-03   9.2447867694658639e-03   1.1762938331472635e-02   1.2474372379002965e-02   5.2732404193403561e-02   5.2732404193403561e-02   9.1651985167578096e-02   6.8910228416942693e-02   | [00:00:00]     [00:00:00]     [00:00:00]   
15             8                        3                        1.0000000000000001e-01   3.3150193295421784e-04   3.3150193295421784e-04   4.0466853445868482e-03   4.7628773784396880e-03   5.0641669676863964e-03   2.2131706062135364e-02   2.2131706062135364e-02   4.1348510583191160e-02   3.0501081394743071e-02   | [00:00:00]     [00:00:00]     [00:00:00]   
